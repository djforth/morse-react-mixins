{"version":3,"sources":["../src/widths_mixins.js"],"names":[],"mappings":";;AACA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE5B,IAAM,KAAK,GAAG,CAAC,cAAc,EAAE,eAAe,EAAE,aAAa,EAAE,cAAc,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,OAAO,CAAC,CAAC;;AAEnI,IAAI,QAAQ,GAAI,EAAE,CAAC;AACnB,IAAI,SAAS,GAAG,EAAE,CAAC;;AAEnB,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAI,CAAC,EAAG;;AAElB,SAAO,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC;CAC1C,CAAC;;AAEF,IAAI,YAAY,GAAG,SAAf,YAAY,CAAI,CAAC,EAAG;AACtB,MAAI,GAAG,GAAI,MAAM,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAC5C,MAAI,CAAC,GAAG,CAAC,CAAC;AACV,GAAC,CAAC,OAAO,CAAC,KAAK,EAAE,UAAC,IAAI,EAAG;AACvB,QAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7C,KAAC,IAAI,CAAC,CAAC;GACR,CAAC,CAAC;AACH,WAAS,CAAC,IAAI,CAAC,EAAC,GAAG,EAAC,CAAC,EAAE,KAAK,EAAC,CAAC,EAAC,CAAC,CAAC;AACjC,SAAO,CAAC,CAAC;CACV,CAAC;;AAIF,MAAM,CAAC,OAAO,GAAG;AACf,cAAY,EAAC,YAAY;;AAEvB,aAAW,EAAC,qBAAC,IAAI,EAAG;AACpB,YAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1B,qBAAY;GACb;;AAEC,gBAAc,EAAC,0BAAI;AACnB,YAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5C,qBAAY;GACb;;AAEC,cAAY,EAAC,wBAAI;AACjB,QAAG,SAAS,CAAC,MAAM,KAAK,CAAC,IAChB,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAC;AAC3B,gBAAK,SAAS,EAAE,CAAC;KAClB;;AAED,WAAO,SAAS,CAAC;GAClB;;AAEC,WAAS,EAAC,mBAAC,IAAI,EAAG;AAClB,QAAI,KAAK,GAAG,AAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAI,IAAI,GAAG,QAAQ;;AAAC,AAEhD,QAAI,KAAK,GAAI,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,UAAS,CAAC,EAAE,CAAC,EAAC;AACzC,UAAI,CAAC,GAAG,AAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAI,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC9C,OAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;AACrB,aAAO,CAAC,CAAC;KACV,CAAC,CAAC;;AAEH,WAAO,KAAK,CAAC;GACd;CACF,CAAC","file":"widths_mixins.js","sourcesContent":["\nconst _ = require(\"lodash\");\n\nconst attrs = [\"padding-left\", \"padding-right\", \"margin-left\", \"margin-right\", \"border-left-width\", \"border-right-width\", \"width\"];\n\nlet elements  = [];\nlet elm_sizes = [];\n\nvar getValue = (v)=>{\n  // console.log(v)\n  return Number(v.replace(/[a-z]|%/g, \"\"));\n};\n\nvar getTrueWidth = (e)=>{\n  let elm =  window.getComputedStyle(e, null);\n  let n = 0;\n  _.forEach(attrs, (attr)=>{\n    let v = getValue(elm.getPropertyValue(attr));\n    n += v;\n  });\n  elm_sizes.push({elm:e, width:n});\n  return n;\n};\n\n\n\nmodule.exports = {\n  getTrueWidth:getTrueWidth\n\n  , convertRefs:(refs)=>{\n    elements = _.values(refs);\n    return this;\n  }\n\n  , convertDomlist:()=>{\n    elements = Array.prototype.slice.call(list);\n    return this;\n  }\n\n  , getAllWidths:()=>{\n    if(elm_sizes.length === 0\n          && elements.length > 0){\n      this.getWidths();\n    }\n\n    return elm_sizes;\n  }\n\n  , getWidths:(list)=>{\n    let items = (_.isArray(list)) ? list : elements;\n    // console.log(list.length, list)\n    let width  = _.reduce(items, function(p, c){\n      let n = (_.isNumber(p)) ? p : getTrueWidth(p);\n      n += getTrueWidth(c);\n      return n;\n    });\n\n    return width;\n  }\n};\n\n"]}